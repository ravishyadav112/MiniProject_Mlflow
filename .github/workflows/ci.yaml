name: CI Pipeline

on: push

jobs:
  project-testing:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: install dependencies
        run: |
          pip install -r requirements.txt

      - name: run pipeline
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: |
          dvc repro


      - name: Login to AWS ECR
        if: success()
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 717279703749.dkr.ecr.ap-south-1.amazonaws.com
      - name: Build Docker image
        if: success()
        run: |
          docker build -t emotion_detection .

      - name: Tag Docker image
        if: success()
        run: |
          docker tag emotion_detection:latest 717279703749.dkr.ecr.ap-south-1.amazonaws.com/emotion_detection:latest



      - name: Push Docker image to AWS ECR
        if: success()
        run: |
         docker push 717279703749.dkr.ecr.ap-south-1.amazonaws.com/emotion_detection:latest

      - name: Deploy to EC2
        if: success()
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws configure set default.region ap-south-1
            aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 717279703749.dkr.ecr.ap-south-1.amazonaws.com
            docker pull 717279703749.dkr.ecr.ap-south-1.amazonaws.com/emotion_detection:latest
            docker stop my-app || true
            docker rm my-app || true
            docker run -d -p 80:5000 -e DAGSHUB_PAT=${{ secrets.DAGSHUB_PAT }} --name emotion_detections 717279703749.dkr.ecr.ap-south-1.amazonaws.com/emotion_detection:latest


      # # Zip the required files
      # - name: Zip files for deployment
      #   if: success()
      #   run: |
      #     zip -r deployment.zip appspec.yml deploy/scripts/install_dependencies.sh deploy/scripts/start_docker.sh

      # # Upload the ZIP file to S3
      # - name: Upload ZIP to S3
      #   if: success()
      #   run: |
      #     aws s3 cp deployment.zip s3://campusxcodedeploybucket/deployment.zip

      # # Deploy to AWS CodeDeploy using the uploaded ZIP file
      # - name: Deploy to AWS CodeDeploy
      #   if: success()
      #   run: |
      #     aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws deploy create-deployment \
      #       --application-name MyDockerApp2 \
      #       --deployment-config-name CodeDeployDefault.OneAtATime \
      #       --deployment-group-name MyDockerAppASGDeploymentGroup \
      #       --s3-location bucket=campusxcodedeploybucket,key=deployment.zip,bundleType=zip \
      #       --file-exists-behavior OVERWRITE \
      #       --region ap-southeast-2


      